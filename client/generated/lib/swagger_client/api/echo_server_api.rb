=begin
#Demo Service

#Demo Service for swagger

OpenAPI spec version: 1.0.0
Contact: dario@example.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module SwaggerClient
  class EchoServerApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Echoes back input
    # Simply echoes back whatever the client passes in. Hopefully can be deployed without even needing a server.  
    # @param i_said What the client has said, to be said back to it.
    # @param [Hash] opts the optional parameters
    # @return [ClientSaid]
    def what_did_i_say(i_said, opts = {})
      data, _status_code, _headers = what_did_i_say_with_http_info(i_said, opts)
      return data
    end

    # Echoes back input
    # Simply echoes back whatever the client passes in. Hopefully can be deployed without even needing a server.  
    # @param i_said What the client has said, to be said back to it.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ClientSaid, Fixnum, Hash)>] ClientSaid data, response status code and response headers
    def what_did_i_say_with_http_info(i_said, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: EchoServerApi.what_did_i_say ..."
      end
      # verify the required parameter 'i_said' is set
      if @api_client.config.client_side_validation && i_said.nil?
        fail ArgumentError, "Missing the required parameter 'i_said' when calling EchoServerApi.what_did_i_say"
      end
      # resource path
      local_var_path = "/"

      # query parameters
      query_params = {}
      query_params[:'iSaid'] = i_said

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ClientSaid')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EchoServerApi#what_did_i_say\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
