/**
 * Demo Service
 * Demo Service for swagger
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dario@example.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.wordnik.client.api

import com.wordnik.client.model.BasicResponse
import com.wordnik.client.model.ClientSaid

import java.io.File

import org.scalatra.{ TypedParamSupport, ScalatraServlet }
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class EchoServerApi(implicit val swagger: Swagger) extends ScalatraServlet
    with FileUploadSupport
    with JacksonJsonSupport
    with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "EchoServerApi"
  override protected val applicationName: Option[String] = Some("/EchoServer")

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }

  val whatDidISayOperation = (apiOperation[ClientSaid]("whatDidISay")
    summary "Echoes back input"
    parameters (queryParam[String]("iSaid").description(""))
  )

  get("/", operation(whatDidISayOperation)) {

    val iSaid = params.getAs[String]("iSaid")

    println("iSaid: " + iSaid)
  }

}
